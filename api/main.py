from typing import List
from pydantic import BaseModel, model_validator
from fastapi import FastAPI, HTTPException
from fastapi.responses import HTMLResponse
import pandas as pd
import joblib
import os
import wandb

# name of the model artifact
artifact_model_name = "attendance_face_recognition/model_export:latest"
# initiate the wandb project
run = wandb.init(project="attendance_face_recognition",job_type="api")

app = FastAPI()

class EmbeddingInput(BaseModel):
    embedding: List[float]

    @model_validator(mode="before")
    def check_length(cls, values):
        emb = values.get("embedding")
        if emb is None or len(emb) != 512:
            raise ValueError(f"‘embedding’ phải có đúng 512 giá trị (đã nhận {len(emb) if emb is not None else 0})")
        return values

    class Config:
        schema_extra = {
            "example": {
                "embedding": [-0.00526371, -0.06797905, -0.01128211,  0.10532754, -0.00537708,
       -0.0012942 , -0.11348557, -0.00541978,  0.01445261, -0.0200986 ,
        0.03910754,  0.05280369,  0.00110032, -0.01598368,  0.02439328,
        0.00401482,  0.05490412,  0.084272  ,  0.02149033,  0.00909398,
       -0.03952082,  0.04961598,  0.02705236, -0.03959526, -0.07958808,
        0.03038182, -0.01233016,  0.05243725,  0.00952353,  0.07738713,
       -0.1009929 , -0.01301267,  0.0126586 , -0.07577658, -0.05753087,
       -0.00344735, -0.02597583, -0.00293906, -0.03100897,  0.03332322,
       -0.01861126,  0.05787909, -0.01151035, -0.03741024, -0.01233493,
        0.00075124,  0.08403762,  0.06729616, -0.09492851,  0.01070815,
       -0.0217961 ,  0.05247886,  0.03715259,  0.0257024 , -0.03611466,
        0.01098726,  0.00995863,  0.10521156,  0.02491371, -0.01062887,
        0.01074472,  0.05431495, -0.03198401, -0.03285547, -0.00176909,
        0.12111478,  0.04187702, -0.01730779, -0.01483122,  0.01926241,
        0.05678869,  0.0849231 ,  0.03449089, -0.00520999, -0.05369285,
       -0.03418667, -0.05043889, -0.00534029, -0.02648639,  0.00629111,
        0.07332026,  0.01648022,  0.05052076,  0.05711442,  0.03152694,
       -0.02556934,  0.00912254,  0.0650382 , -0.06318035,  0.01261817,
        0.06541225,  0.01426045,  0.05429093, -0.0024123 ,  0.02471203,
        0.04020876,  0.04074753,  0.03521918, -0.03931765,  0.00856279,
       -0.02006232, -0.07020311, -0.04110233,  0.04399399,  0.01958873,
        0.01251389,  0.08175379, -0.00278869, -0.00421036,  0.03477266,
        0.02556011,  0.0114042 , -0.09988733,  0.00277377, -0.02685785,
       -0.01151703,  0.06273895,  0.02240958,  0.02223952,  0.06529518,
       -0.04141963, -0.05232844, -0.00370606, -0.05479079,  0.00433734,
       -0.01286563,  0.00398455,  0.02076688, -0.07054857, -0.06960075,
       -0.00869587, -0.03904505,  0.04686397, -0.0301601 , -0.12103771,
        0.04322494, -0.06060414,  0.04594416,  0.07335541,  0.05476694,
       -0.03081288,  0.02284214,  0.00952508,  0.0693659 ,  0.05818579,
       -0.03520199, -0.02905366, -0.04365501, -0.02978659,  0.03301065,
        0.06697071, -0.02666714, -0.04927835,  0.04463891,  0.03524646,
       -0.04599683,  0.03153787, -0.01274431, -0.0379646 , -0.00889663,
        0.06956482, -0.01354058, -0.0306394 ,  0.05871948,  0.03249279,
        0.01771522, -0.03409884, -0.07556182, -0.02579942,  0.01633024,
       -0.04835873,  0.0092078 , -0.01574408, -0.04627382, -0.00658153,
        0.0076402 ,  0.09535576, -0.00371958,  0.00221077, -0.01879626,
       -0.05440089, -0.05482006, -0.04514982,  0.04821404, -0.00810117,
        0.05462745, -0.00649982,  0.06296217,  0.0165758 ,  0.01016155,
        0.03424587, -0.03480312,  0.03868825,  0.02512676,  0.05264736,
        0.03871348, -0.00743469,  0.03903879, -0.07453205,  0.08641439,
        0.04146353,  0.03310775, -0.07448013, -0.04168318, -0.05271596,
        0.03161192, -0.01653872,  0.00850334, -0.01160087,  0.0165239 ,
        0.01432154,  0.00864151,  0.00067166,  0.02422832, -0.05437287,
       -0.0063832 , -0.05065576,  0.10214818, -0.05922835,  0.0425288 ,
       -0.05330299, -0.07363702, -0.051046  , -0.09744819, -0.01220415,
        0.02471223, -0.04375557,  0.01080869, -0.02145003,  0.02533888,
        0.07810526, -0.01667414,  0.01879258, -0.09662689, -0.04840984,
        0.01546032,  0.02740419,  0.02938058, -0.04535635, -0.00743863,
        0.01650917,  0.00180974,  0.03186253,  0.04457127,  0.00242443,
        0.07620895, -0.03636411,  0.082247  ,  0.00301377, -0.00024253,
       -0.01009484, -0.01251771, -0.01018578,  0.04105819,  0.02536764,
        0.10453212, -0.00629148, -0.0070048 ,  0.08741883,  0.04377841,
       -0.05555442, -0.06580972,  0.03451814, -0.01207817, -0.03393793,
        0.02929077,  0.03035532,  0.01046716, -0.01355674,  0.04366215,
       -0.04068632, -0.03169324,  0.04809979, -0.00842628,  0.00720631,
       -0.01796162, -0.02025395, -0.01093134, -0.01432776, -0.03831775,
        0.03893749,  0.01111702, -0.05155792, -0.05725147, -0.03688633,
        0.02199719, -0.01563033,  0.03349951, -0.0050845 , -0.07486255,
        0.02939469, -0.07835174,  0.02479724,  0.02203344, -0.08384768,
       -0.08921764,  0.04168392,  0.01135442,  0.01521033, -0.00024064,
        0.04118127, -0.02895894,  0.08679164,  0.03815006,  0.04009099,
       -0.0079366 , -0.01267461, -0.00892302, -0.05093662, -0.02293741,
        0.06673968,  0.08656148,  0.00824508,  0.047394  ,  0.03020684,
        0.03275255, -0.08146732,  0.01531638, -0.00588033,  0.05924232,
        0.03922559,  0.01283583,  0.0103675 ,  0.11418268, -0.00495307,
       -0.02533147,  0.05121407,  0.03747677,  0.07345352,  0.06894397,
        0.03662019, -0.03697972,  0.00285395, -0.00345868,  0.02432826,
        0.00563516,  0.00204704, -0.05063735,  0.00557182, -0.01120063,
        0.07094037,  0.0466966 , -0.01900632, -0.01656689,  0.01275145,
       -0.03742341, -0.03701562,  0.04317316,  0.07176358,  0.01353749,
        0.04505834,  0.00224055, -0.06164867,  0.01703538, -0.07370371,
        0.01830172,  0.03844326,  0.01958565,  0.0478965 ,  0.07653884,
       -0.04270655,  0.07013648, -0.05519404,  0.00356553, -0.03607567,
        0.0159843 ,  0.02087428, -0.0576281 , -0.02949463, -0.02446819,
       -0.07511504, -0.02766746, -0.0202701 ,  0.01120628,  0.10157178,
        0.08562997, -0.02040635,  0.00161476, -0.02173888, -0.00986097,
        0.01406292, -0.04363998, -0.01384168,  0.04797962,  0.0435968 ,
       -0.01352144,  0.00162589, -0.0662142 ,  0.02831308, -0.02816772,
        0.01896374,  0.00480874, -0.00471128, -0.11972241,  0.0151834 ,
        0.04994807,  0.04135595, -0.03130612,  0.01969741,  0.0302052 ,
       -0.03889199,  0.06002432, -0.02041786,  0.00607267, -0.00373286,
       -0.04784318, -0.01005421, -0.03815339,  0.00634971, -0.02691027,
        0.03881719, -0.04772571,  0.09578624,  0.02297157,  0.00669207,
        0.03693729,  0.03614271,  0.10709364, -0.01474231, -0.02554518,
        0.01693838, -0.00474048,  0.01110752,  0.03617771, -0.04352157,
       -0.04441954,  0.00552926,  0.01804711, -0.02782486, -0.03175074,
        0.02711852,  0.03245505,  0.01113155,  0.01742813, -0.09887011,
        0.03707566,  0.01472174,  0.00950772, -0.00814487, -0.02068007,
        0.01481873,  0.02445573, -0.03246404,  0.0428402 , -0.02610558,
        0.03298275, -0.0177763 ,  0.00564951, -0.08778065,  0.00046123,
       -0.02456817,  0.07441875,  0.03466761, -0.01130023,  0.0652531 ,
       -0.05986661,  0.06681956, -0.00023001,  0.02156763,  0.02942237,
       -0.01471303, -0.07443575, -0.06336147, -0.03515774,  0.11080132,
        0.00779319, -0.03880235, -0.01097182,  0.01391226,  0.02404042,
        0.00629821, -0.0019194 ,  0.07716357, -0.06140529, -0.05189308,
       -0.04786014,  0.04585409, -0.0431712 ,  0.0159478 ,  0.10643143,
        0.02693375,  0.00510703,  0.03263557,  0.00635965,  0.01343189,
        0.05442547, -0.05645622, -0.00381987,  0.02925262,  0.00467777,
       -0.00955849,  0.03383671, -0.07753173,  0.01344208,  0.0421649 ,
       -0.0697845 ,  0.06023613,  0.01236554, -0.04460165, -0.02164298,
       -0.09369908,  0.06759552, -0.05731449,  0.05034866, -0.01768825,
       -0.01218751,  0.01118965, -0.01975044, -0.00053107,  0.06196464,
        0.03985469, -0.04861918]
            }
        }

@app.get("/", response_class=HTMLResponse)
async def root():
    return "<h1>Facical Recodnition API</h1><p>Ready to predict 512-dim embeddings.</p>"

@app.post("/predict")
async def predict_student(input: EmbeddingInput):
    try:
        model_export_path = run.use_artifact(artifact_model_name).download()
        model = joblib.load(os.path.join(model_export_path, "model_export"))
        # Tạo DataFrame và predict
        df = pd.DataFrame([input.embedding])
        pred = model.predict(df)[0]
        return {"student_id":int(pred)}
    except Exception as e:
        raise HTTPException(status_code=400, detail=str(e))
